# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  schedule:
    - cron: "0 * * * *"

name: spiderbot

jobs:
 spiderbot:
    runs-on: ubuntu-18.04
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      GITHUB.OBSERVATORY_PASSWORD: ${{ secrets.GS4_PASSWORD }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: '4.2.0'

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Prepare
        run: |
          echo "utils::chooseCRANmirror(graphics=FALSE, ind = 1)" > .Rprofile
          Rscript -e "Date <- as.character(read.dcf('DESCRIPTION', 'Date'));
                      URL <- if(is.na(Date)) 'https://cran.rstudio.com/' else paste0('https://mran.microsoft.com/snapshot/', Date);
                      Rprofile <- file('.Rprofile', open = 'wt');
                      writeLines('.libPaths(.libPaths()[1])', Rprofile);
                      writeLines('require(remotes)', Rprofile);
                      writeLines(paste0('options(repos = \'', URL, '\')'), Rprofile);
                      close(Rprofile)"
          Rscript -e "if(!'remotes' %in% rownames(utils::installed.packages())) utils::install.packages('remotes')"
          Rscript -e "remotes::update_packages(dependencies = TRUE)"

      - name: Query dependencies
        run: |
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Install system dependencies
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
          sudo apt-get install build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev libgit2-dev

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran(c("devtools", "rcmdcheck", "rmarkdown"))
        shell: Rscript {0}
    #
    #   - name: Check
    #     env:
    #       _R_CHECK_CRAN_INCOMING_REMOTE_: false
    #     run: |
    #       devtools::document()
    #       rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "error", check_dir = "check")
    #     shell: Rscript {0}
    #
    #   - name: Upload check results
    #     if: failure()
    #     uses: actions/upload-artifact@main
    #     with:
    #       name: ${{ runner.os }}-r${{ matrix.config.r }}-results
    #       path: check
